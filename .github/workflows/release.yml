name: Release
# 自动发布
on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    permissions:
      contents: write
    strategy:
      fail-fast: false
    runs-on: windows-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-msvc

      - name: Get version from tag
        id: get_version
        shell: pwsh
        run: |
          $tag = "${{ github.ref_name }}"
          $version = $tag -replace '^v',''
          echo "version=$version" >> $env:GITHUB_OUTPUT

      - name: Install dependencies (Windows)
        run: |
          npm install

      - name: Install Tauri CLI
        run: cargo install tauri-cli

      - name: Build the app
        env:
          VERSION: ${{ steps.get_version.outputs.version }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
        run: |
          npm run build
          npm run tauri build

      - name: Sign Windows Installer
        env:
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
        shell: pwsh
        run: |
          $version = "${{ steps.get_version.outputs.version }}"
          $installerPath = "src-tauri/target/release/bundle/nsis/lulu_${version}_x64-setup.exe"
          # 创建临时私钥文件
          $env:TAURI_SIGNING_PRIVATE_KEY | Out-File -FilePath "private_key.key"
          # 使用私钥文件进行签名
          cargo tauri signer sign --private-key-path "private_key.key" --password "$env:TAURI_SIGNING_PRIVATE_KEY_PASSWORD" $installerPath
          # 删除临时私钥文件
          Remove-Item "private_key.key"

      - name: Generate latest.json
        shell: pwsh
        run: |
          $version = "${{ steps.get_version.outputs.version }}"
          $notes = "Release $version"
          $signature = Get-Content "src-tauri/target/release/bundle/nsis/lulu_${version}_x64-setup.exe.sig" -Raw
          $platforms = @{
            "windows-x86_64" = @{
              signature = $signature
              url = "https://github.com/wangenius/lulu/releases/download/v${version}/lulu_${version}_x64-setup.exe"
            }
          }
          $json = @{
            version = $version
            notes = $notes
            pub_date = (Get-Date -Format "yyyy-MM-ddTHH:mm:ssZ")
            platforms = $platforms
          } | ConvertTo-Json -Depth 10
          $json | Out-File -FilePath "latest.json" -Encoding UTF8

      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            src-tauri/target/release/bundle/msi/lulu_${{ steps.get_version.outputs.version }}_x64_en-US.msi
            src-tauri/target/release/bundle/nsis/lulu_${{ steps.get_version.outputs.version }}_x64-setup.exe
            src-tauri/target/release/bundle/nsis/lulu_${{ steps.get_version.outputs.version }}_x64-setup.exe.sig
            latest.json
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 